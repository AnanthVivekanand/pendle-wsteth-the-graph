type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Burn @entity(immutable: true) {
  id: Bytes!
  receiverSy: Bytes! # address
  receiverPt: Bytes! # address
  netLpBurned: BigInt! # uint256
  netSyOut: BigInt! # uint256
  netPtOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IncreaseObservationCardinalityNext @entity(immutable: true) {
  id: Bytes!
  observationCardinalityNextOld: Int! # uint16
  observationCardinalityNextNew: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Mint @entity(immutable: true) {
  id: Bytes!
  receiver: Bytes! # address
  netLpMinted: BigInt! # uint256
  netSyUsed: BigInt! # uint256
  netPtUsed: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Swap @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  receiver: Bytes! # address
  netPtOut: BigInt! # int256
  netSyOut: BigInt! # int256
  netSyFee: BigInt! # uint256
  netSyToReserve: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateImpliedRate @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  lnLastImpliedRate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
